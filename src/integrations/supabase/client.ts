
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://mdxoxmoxkxtpgsepoglq.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1keG94bW94a3h0cGdzZXBvZ2xxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDAzNDUxOTYsImV4cCI6MjA1NTkyMTE5Nn0.myIOsChYkVn5jletYx5yURKvIXGvhyyO3OWygEhCy4s";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Default headers for all requests
const defaultHeaders = {
  'apikey': SUPABASE_PUBLISHABLE_KEY,
  'Authorization': `Bearer ${SUPABASE_PUBLISHABLE_KEY}`,
  'X-Trading-Mode': 'real',
  'X-Client-Info': 'trading-app'
};

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true
  },
  global: {
    // Apply headers globally
    headers: defaultHeaders,
    // Custom fetch implementation to ensure headers are always present
    fetch: (...args) => {
      const [url, options = {}] = args;
      
      return fetch(url, {
        ...options,
        headers: {
          ...defaultHeaders,
          ...(options.headers || {})
        }
      });
    }
  }
});

// Set additional default headers for all supabase requests
supabase.functions.setAuth(SUPABASE_PUBLISHABLE_KEY);

// Export a helper function to reset headers in case they get lost in any scenario
export const resetSupabaseHeaders = () => {
  supabase.functions.setAuth(SUPABASE_PUBLISHABLE_KEY);
  
  // We can't directly access protected 'rest.headers', so we'll use a different approach
  // to ensure headers are properly set for future requests
  
  // This approach doesn't try to modify internal properties directly, but ensures
  // that the next request will have the proper headers via global fetch settings
  const testRequest = async () => {
    try {
      // Make a small request to ensure headers are properly set
      // Using a known table instead of a dummy one that doesn't exist
      await supabase.from('trading_accounts').select('id').limit(1);
    } catch (e) {
      // Ignore errors, we just want to ensure headers are set
      console.log('Headers reset for Supabase client');
    }
  };
  
  // Execute immediately to ensure headers are set
  testRequest();
};
